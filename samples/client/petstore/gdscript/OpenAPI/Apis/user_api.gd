extends HTTPRequest

# coding: utf-8

"""
    OpenAPI Petstore

    This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/OpenAPITools/openapi-generator.git
"""


export(String) var private_key
export(String) var game_id
export(String) var base_url
export(bool) var ssl_validate_domain
export(bool) var validate

var username_cache
var token_cache
var request_type

var busy = false

preload("../Models/user.gd")
var unirest = preload("../unirest.gd")

"""Create user

This can only be done by the logged in user.
:param User body: Created user object (required)
"""

func create_user(User body,  auth = null, callback = null):   
    unirest.post(base_url + "/user", {  }, { JSON.print(body.dict) }, auth, callback)

"""Creates list of users with given input array

:param List[User] body: List of user object (required)
"""

func create_users_with_array_input(List[User] body,  auth = null, callback = null):   
    unirest.post(base_url + "/user/createWithArray", {  }, { JSON.print(body.dict) }, auth, callback)

"""Creates list of users with given input array

:param List[User] body: List of user object (required)
"""

func create_users_with_list_input(List[User] body,  auth = null, callback = null):   
    unirest.post(base_url + "/user/createWithList", {  }, { JSON.print(body.dict) }, auth, callback)

"""Delete user

This can only be done by the logged in user.
:param String username: The name that needs to be deleted (required)
"""

func delete_user(String username,  auth = null, callback = null):   
    unirest.delete(base_url + "/user/{username}", {  }, {  }, auth, callback)

"""Get user by user name

:param String username: The name that needs to be fetched. Use user1 for testing. (required)
"""

func get_user_by_name(String username,  auth = null, callback = null):   
    unirest.get(base_url + "/user/{username}", {  }, {  }, auth, callback)

"""Logs user into the system

:param String username: The user name for login (required)
:param String password: The password for login in clear text (required)
"""

func login_user(String username, String password,  auth = null, callback = null):   
    unirest.get(base_url + "/user/login", {  }, {  }, auth, callback)

"""Logs out current logged in user session

"""

func logout_user( auth = null, callback = null):   
    unirest.get(base_url + "/user/logout", {  }, {  }, auth, callback)

"""Updated user

This can only be done by the logged in user.
:param String username: name that need to be deleted (required)
:param User body: Updated user object (required)
"""

func update_user(String username, User body,  auth = null, callback = null):   
    unirest.put(base_url + "/user/{username}", {  }, { JSON.print(body.dict) }, auth, callback)

